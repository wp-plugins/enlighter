<div id="EnlighterHelp" style="display: none;">
<p>Just insert an enlighter shortcode with the code to highlight into your posts/pages - That`s it!</p>

<h2>Language-Shortcodes</h2>
<p>The most easy way to use Enlighter is to wrap your code, which should be highlighted, in a language-shortcode tag.</p>

<h4>Example</h4>
<pre>[js]
var x = new EnligherJS.Helper($$('pre'));
[/js]</pre>

<h4>Language-Shortcode List</h4>
<pre><?php 
	foreach ($langs as $d=>$l){ 
		echo '[', $l, '] '; 
	}?>
</pre>

<h4>Syntax</h4>
<code>[js theme="" group="" tab=""] YOUR CODE [/js]</code>

<h4>Attributes</h4>
<ul style="padding-left: 10px">
	<li><strong>theme</strong> (optional) - defines the theme that should used, will overwrite the settings-page values</li>
	<li><strong>group</strong> (optional) - the group identifier if code-grouping is used (elements with matching identifiers will be grouped together). <br />
		Note: when using [codegroup] tags this attribute will be generated automaically - you don't have to set it!
	</li>
	<li><strong>tab</strong> (optional) - set the name of the tab-pane, if not defined the language will be used as title</li>
</ul>

<h2>Codegroup-Shortcode</h2>
<p>You can also use EnlighterJS to display a set of different codes within a tab-pane</p>
<h4>Example</h4>
<pre>
[codegroup]
 	[js tab="Javascript Message"]
	window.addEvent('domready', function(){
		// display string on console
		console.info('Hello Enlighter');
		
		// show element
		$('#myelement').show();
	});	
	[/js]
	
	[html]
	&lt;div id="myelement"&gt;
	INITIALIZATION START
	&lt;/div&gt;		
	[/html]
	
	[css tab="Styling"]
	#myelement{
		color: #cc2222;
		padding: 15px;
		font-size: 20px;
		text-align: center;		
	}		
	[/css]	
[/codegroup]
</pre>

<h4>Syntax</h4>
<code>[codegroup theme=""] [js tab=""]...[/js] [css]...[/css] ... [/codegroup]</code>

<h4>Attributes</h4>
<ul style="padding-left: 10px">
	<li><strong>theme</strong> (optional) - defines the theme that should used, will overwrite the settings-page values</li>
	<li><strong>tab</strong> (optional) - set the name of the tab-pane, if not defined the language name will be used as title</li>
</ul>

<h2>Generic-Shortcode</h2>
<p>If you're using other plugins which uses also language-shortcodes, you can use the enlighter with generic shortcode. The generic shortcode got directly transformed to a </p>

<h4>Example</h4>
<pre>[enlighter lang="js"]
var x = new EnligherJS.Helper($$('pre'));
[/enligher]
</pre>

<h4>Syntax</h4>
<code>[enlighter lang="" theme="" group="" tab=""] YOUR CODE [/enlighter]</code>

<h4>Attributes</h4>
<ul style="padding-left: 10px">
	<li><strong>lang</strong> (optional) - specify the language which should used, if not defined values from the settings-page are used</li>
	<li><strong>theme</strong> (optional) - defines the theme that should used, will overwrite the settings-page values</li>
	<li><strong>group</strong> (optional) - the group identifier if code-grouping is used (elements with matching identifiers will be grouped together)</li>
	<li><strong>tab</strong> (optional) - set the name of the tab-pane, if not defined the language name will be used as title</li>
</ul>

</div>